/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.15
 * Generated at: 2023-11-14 01:39:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.template;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.trabajouy.model.EstadoSesion;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/media/styles/headerandreset.css", Long.valueOf(1699925636000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.trabajouy.model.EstadoSesion");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("		<style>\n");
      out.write("            ");
      out.write("a:link,\n");
      out.write("a:visited,\n");
      out.write("a:active,\n");
      out.write("a:hover {\n");
      out.write("  color: black;\n");
      out.write("  text-decoration: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("body {\n");
      out.write("    font-family: 'Montserrat', sans-serif;    \n");
      out.write("    margin: 0;\n");
      out.write("    padding: 0;\n");
      out.write("    box-sizing: border-box;\n");
      out.write("    \n");
      out.write("    background-color: #f3f4f6;\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  header {\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: space-between;\n");
      out.write("    align-items: center;\n");
      out.write("    padding: 1px 1%;\n");
      out.write("    \n");
      out.write("    flex-wrap: wrap;\n");
      out.write("    background-color: #3f838c;\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .logo {\n");
      out.write("    margin: 1em;\n");
      out.write("    width: 200px;\n");
      out.write("    transition: opacity 0.3s;\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .logo:hover {\n");
      out.write("    opacity: 0.8;\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .search-box {\n");
      out.write("    display: flex;\n");
      out.write("    align-items: center;\n");
      out.write("    gap: 10px; /* ReducciÃ³n del espacio entre elementos */\n");
      out.write("    border-radius: 25px; /* Bordes un poco mÃ¡s reducidos */\n");
      out.write("    background-color: #f1f3f5;\n");
      out.write("    padding: 8px 15px; /* Padding reducido */\n");
      out.write("    box-shadow: 0 5px 30px rgba(40, 102, 110, 0.1);\n");
      out.write("    border: 0.12em solid #03045E;\n");
      out.write("    width: 70%; /* Ancho reducido al 70% */\n");
      out.write("    max-width: 600px; /* Ancho mÃ¡ximo reducido */\n");
      out.write("    margin: auto;\n");
      out.write("    transition: all 0.3s ease;\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .search-box:hover {\n");
      out.write("    box-shadow: 0 7px 40px rgba(40, 102, 110, 0.15);\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .search-box input[type=\"text\"] {\n");
      out.write("    flex: 1;\n");
      out.write("    padding: 8px; /* Padding reducido */\n");
      out.write("    border: none;\n");
      out.write("    border-radius: 20px; /* Bordes un poco mÃ¡s reducidos */\n");
      out.write("    outline: none;\n");
      out.write("    font-size: 1em; /* TamaÃ±o de fuente estÃ¡ndar */\n");
      out.write("    font-family: 'Arial', sans-serif;\n");
      out.write("    background-color: transparent;\n");
      out.write("    transition: box-shadow 0.3s, background-color 0.3s;\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .search-box input[type=\"text\"]:focus {\n");
      out.write("    background-color: rgba(255, 255, 255, 0.7);\n");
      out.write("    box-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.1);\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .search-button {\n");
      out.write("    padding: 8px 20px; /* Padding reducido */\n");
      out.write("    border: none;\n");
      out.write("    border-radius: 20px; /* Bordes un poco mÃ¡s reducidos */\n");
      out.write("    cursor: pointer;\n");
      out.write("    font-size: 1em; /* TamaÃ±o de fuente estÃ¡ndar */\n");
      out.write("    font-weight: 600;\n");
      out.write("    font-family: 'Arial', sans-serif;\n");
      out.write("    background-color: #28666e;\n");
      out.write("    color: #ffffff;\n");
      out.write("    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n");
      out.write("    transition: all 0.3s ease;\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .search-button:hover, .search-button:focus {\n");
      out.write("    background-color: #0077B6;\n");
      out.write("    transform: translateY(-2px); /* Efecto ligeramente reducido */\n");
      out.write("    box-shadow: 0 5px 25px rgba(0, 0, 0, 0.2);\n");
      out.write("  }\n");
      out.write("  .search-box {\n");
      out.write("    animation: slideUp 0.5s ease forwards;\n");
      out.write("  }\n");
      out.write("  @keyframes slideUp {\n");
      out.write("    from {\n");
      out.write("        opacity: 0;\n");
      out.write("        transform: translateY(20px);\n");
      out.write("    }\n");
      out.write("    to {\n");
      out.write("        opacity: 1;\n");
      out.write("        transform: translateY(0);\n");
      out.write("    }\n");
      out.write("  }\n");
      out.write("  .header-title {\n");
      out.write("    font-weight: 600;\n");
      out.write("    font-size: 1.7em;\n");
      out.write("    padding: 1em;\n");
      out.write("    font-weight: bold;\n");
      out.write("    color: #28666e; /* Color oscuro para el tÃ­tulo */\n");
      out.write("  }\n");
      out.write("\n");
      out.write("  .buttons-section {\n");
      out.write("    display: flex;\n");
      out.write("    gap: 10px;\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .login-button,\n");
      out.write("  .register-button {\n");
      out.write("    padding: 10px 15px;\n");
      out.write("    border: none;\n");
      out.write("    border-radius: 5px;\n");
      out.write("    font-size: 16px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    transition: background-color 0.3s ease;\n");
      out.write("    /* Ajustado para que la transiciÃ³n se aplique sobre la propiedad 'background-color' */\n");
      out.write("    letter-spacing: 0.5px;\n");
      out.write("    /* Espaciado entre letras para un aspecto mÃ¡s estilizado */\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .login-button {\n");
      out.write("    background-color: #28666e;\n");
      out.write("    color: #ffffff;\n");
      out.write("    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n");
      out.write("    /* Sombra suave para darle profundidad */\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .login-button:hover {\n");
      out.write("    background-color: #ffffff;\n");
      out.write("    color: black;\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .register-button {\n");
      out.write("    background-color: #28666e;\n");
      out.write("    color: #ffffff;\n");
      out.write("    /* Color principal para el texto */\n");
      out.write("    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n");
      out.write("    /* Sombra suave */\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .register-button:hover {\n");
      out.write("    background-color: #ffffff;\n");
      out.write("    color: black;\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .profile-section {\n");
      out.write("    display: flex;\n");
      out.write("    align-items: center;\n");
      out.write("    justify-content: center;\n");
      out.write("    gap: 1rem;\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .profile-section button {\n");
      out.write("    padding: 10px 15px;\n");
      out.write("    border: none;\n");
      out.write("    border-radius: 5px;\n");
      out.write("    font-size: 16px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    transition: background-color 0.3s ease;\n");
      out.write("    /* Ajustado para que la transiciÃ³n se aplique sobre la propiedad 'background-color' */\n");
      out.write("    letter-spacing: 0.5px;\n");
      out.write("    background-color: #28666e;\n");
      out.write("    color: #ffffff;\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .profile-section button:hover {\n");
      out.write("    background-color: #ffffff;\n");
      out.write("    transition-duration: 100ms;\n");
      out.write("    color: rgb(0, 0, 0);\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .profile-section div {\n");
      out.write("    display: flex;\n");
      out.write("    align-items: center;\n");
      out.write("    padding-right: 0.5rem;\n");
      out.write("    gap: 0.5rem;\n");
      out.write("    color: white;\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .profile-section div:hover {\n");
      out.write("    opacity: 0.8;\n");
      out.write("    transition: 100ms;\n");
      out.write("    cursor: pointer;\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  .profile-section img {\n");
      out.write("    width: 50px;\n");
      out.write("    height: 50px;\n");
      out.write("    border: 3px black solid;\n");
      out.write("    border-radius: 50%;\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("  \n");
      out.write("  .pixel-spinner\n");
      out.write("{\n");
      out.write("	text-align: center;\n");
      out.write("}\n");
      out.write(".pixel-spinner, .pixel-spinner * {\n");
      out.write("      box-sizing: border-box;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .pixel-spinner {\n");
      out.write("      height: 70px;\n");
      out.write("      width: 70px;\n");
      out.write("      display: flex;\n");
      out.write("      flex-direction: row;\n");
      out.write("      justify-content: center;\n");
      out.write("      align-items: center;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .pixel-spinner .pixel-spinner-inner {\n");
      out.write("      width: calc(70px / 7);\n");
      out.write("      height: calc(70px / 7);\n");
      out.write("      background-color: #28666e;\n");
      out.write("      color: #28666e;\n");
      out.write("      box-shadow: 15px 15px  0 0,\n");
      out.write("                  -15px -15px  0 0,\n");
      out.write("                  15px -15px  0 0,\n");
      out.write("                  -15px 15px  0 0,\n");
      out.write("                  0 15px  0 0,\n");
      out.write("                  15px 0  0 0,\n");
      out.write("                  -15px 0  0 0,\n");
      out.write("                  0 -15px 0 0;\n");
      out.write("      animation: pixel-spinner-animation 2000ms linear infinite;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    @keyframes pixel-spinner-animation {\n");
      out.write("      50% {\n");
      out.write("        box-shadow: 20px 20px 0px 0px,\n");
      out.write("                    -20px -20px 0px 0px,\n");
      out.write("                    20px -20px 0px 0px,\n");
      out.write("                    -20px 20px 0px 0px,\n");
      out.write("                    0px 10px 0px 0px,\n");
      out.write("                    10px 0px 0px 0px,\n");
      out.write("                    -10px 0px 0px 0px,\n");
      out.write("                    0px -10px 0px 0px;\n");
      out.write("      }\n");
      out.write("      75% {\n");
      out.write("        box-shadow: 20px 20px 0px 0px,\n");
      out.write("                    -20px -20px 0px 0px,\n");
      out.write("                    20px -20px 0px 0px,\n");
      out.write("                    -20px 20px 0px 0px,\n");
      out.write("                    0px 10px 0px 0px,\n");
      out.write("                    10px 0px 0px 0px,\n");
      out.write("                    -10px 0px 0px 0px,\n");
      out.write("                    0px -10px 0px 0px;\n");
      out.write("      }\n");
      out.write("      100% {\n");
      out.write("        transform: rotate(360deg);\n");
      out.write("      }\n");
      out.write("    }\n");
      out.write(".pixel-spinner{\n");
      out.write("	display: flex;\n");
      out.write("	align-items: center;\n");
      out.write("	justify-content: center;\n");
      out.write("}\n");
      out.write(".spinner-container\n");
      out.write("{\n");
      out.write("	justify-content: center;\n");
      out.write("	align-items: center;\n");
      out.write("}\n");
      out.write(".label-favorito:hover {\n");
      out.write("	cursor: pointer;\n");
      out.write("}");
      out.write("\n");
      out.write("\n");
      out.write("        </style>\n");
      out.write("        <header>\n");
      out.write("\n");
      out.write("            <a href=\"home\"><img id=\"logo\" class=\"logo\" src=\"media/images/logo.png\"\n");
      out.write("                    alt=\"Logo de la empresa\"></a>\n");
      out.write("                   <div class=\"buttons-section\">\n");
      out.write("		\n");
      out.write("		<!--<form action=\"/trabajouy/home\"	 method=\"post\">\n");
      out.write("			<input type=\"hidden\" name=\"botonPresionado\" value=\"true\">\n");
      out.write("			<button class=\"login-button\" type=\"submit\">Cargar Datos</button>\n");
      out.write("		</form>-->\n");
      out.write("\n");
      out.write("\n");
      out.write("	</div>\n");
      out.write("            <form method=\"POST\" action=\"/web/barraDeBusqueda\" class=\"search-box\">\n");
      out.write("                <input type=\"text\" name=\"busqueda\" placeholder=\"Buscar...\">\n");
      out.write("                <button type=\"submit\" class=\"search-button\">Buscar</button>\n");
      out.write("            </form>\n");
      out.write("    \n");
      out.write("            \n");
      out.write("            ");

           EstadoSesion sesion = (EstadoSesion) request.getSession().getAttribute("estado_sesion"); 
            if(sesion == null || sesion == EstadoSesion.VISITANTE){
            
      out.write("\n");
      out.write("            <div class=\"buttons-section\">\n");
      out.write("                <a href=\"login\"><button class=\"login-button\">Iniciar sesión</button></a>\n");
      out.write("                <a href=\"register\"><button class=\"register-button\">Registrarse</button></a>\n");
      out.write("            </div>\n");
      out.write("            ");
 } else if (sesion == EstadoSesion.EMPRESA || sesion == EstadoSesion.POSTULANTE){
            	String nickname = (String) request.getSession().getAttribute("nickname_sesion");
            	
      out.write("\n");
      out.write("           <div class=\"profile-section\">\n");
      out.write("            <a href=\"perfil\">\n");
      out.write("                <div id=\"header-to-profile\">\n");
      out.write("                ");
 String foto = (String) request.getSession().getAttribute("foto_sesion");
                System.out.println(foto);
                
      out.write("\n");
      out.write("                    <img id=\"profile-photo\" src=\"/web/media/images/");
      out.print(foto);
      out.write("\"/>\n");
      out.write("                    <p id=\"header-nickname\"><b>");
      out.print( nickname);
      out.write("</b></p>\n");
      out.write("                </div>\n");
      out.write("            </a>\n");
      out.write("            <form action=\"/web/home\" method = \"post\">\n");
      out.write("            <button>Cerrar Sesión</button>\n");
      out.write("            </form>\n");
      out.write("            \n");
      out.write("        </div>\n");
      out.write("        ");
}
      out.write("\n");
      out.write("        </header>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
